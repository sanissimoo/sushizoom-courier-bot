from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters, CallbackContext
import os

# –ó–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = int(os.getenv("CHAT_ID"))  # –ù–∞–ø—Ä–∏–∫–ª–∞–¥: -1002582699976

# –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∫–Ω–æ–ø–æ–∫
messages = {
    "accept": "üöö –ü—Ä–∏–π–Ω—è–≤ –¥–æ—Å—Ç–∞–≤–∫—É",
    "delay": "‚è≥ –ó–∞—Ç—Ä–∏–º—É—é—Å—å",
    "arrived": "üè¶ –ü—Ä–∏–±—É–≤",
    "done": "‚úÖ –ó–∞–≤–µ—Ä—à–∏–≤ –¥–æ—Å—Ç–∞–≤–∫—É"
}

# –°—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
user_state = {}

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[
        KeyboardButton("–ü—Ä–∏–π–Ω—è–≤ –¥–æ—Å—Ç–∞–≤–∫—É"),
        KeyboardButton("–ó–∞—Ç—Ä–∏–º—É—é—Å—å")
    ], [
        KeyboardButton("–ü—Ä–∏–±—É–≤"),
        KeyboardButton("–ó–∞–≤–µ—Ä—à–∏–≤ –¥–æ—Å—Ç–∞–≤–∫—É")
    ]]

    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=reply_markup)

# –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫ —ñ —Ç–µ–∫—Å—Ç—É
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    user_id = update.message.from_user.id
    username = update.message.from_user.username or update.message.from_user.first_name

    # –Ø–∫—â–æ —á–µ–∫–∞—î–º–æ –∞–¥—Ä–µ—Å—É –ø—ñ—Å–ª—è "–ü—Ä–∏–π–Ω—è–≤ –¥–æ—Å—Ç–∞–≤–∫—É"
    if user_state.get(user_id) == "awaiting_address":
        msg = f"‚úâÔ∏è –ö—É—Ä'—î—Ä {username} –ø—Ä–∏–π–Ω—è–≤ –¥–æ—Å—Ç–∞–≤–∫—É
–ê–¥—Ä–µ—Å–∞: {text}"
        await context.bot.send_message(chat_id=CHAT_ID, text=msg)
        user_state[user_id] = None
        await update.message.reply_text("–î—è–∫—É—î–º–æ! –ê–¥—Ä–µ—Å—É –ø–µ—Ä–µ–¥–∞–Ω–æ.")
        return

    # –Ø–∫—â–æ –æ–±—Ä–∞–Ω–æ –¥—ñ—é
    for action, label in messages.items():
        if label.endswith(text):
            if action == "accept":
                user_state[user_id] = "awaiting_address"
                await update.message.reply_text("–í–≤–µ–¥—ñ—Ç—å –∞–¥—Ä–µ—Å—É –¥–æ—Å—Ç–∞–≤–∫–∏:")
            else:
                msg = f"‚úâÔ∏è –ö—É—Ä'—î—Ä {username} {label}"
                await context.bot.send_message(chat_id=CHAT_ID, text=msg)
                await update.message.reply_text("–û–∫, –æ–Ω–æ–≤–ª–µ–Ω–æ!")
            return

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("Bot is running...")
    app.run_polling()
